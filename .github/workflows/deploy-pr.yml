name: pr-deployment

on:
  issue_comment:
    types: [created]

jobs:
 #config:
 #  runs-on: ubuntu-latest
 #  steps:
 #    - name: acknowledge deployment request to commenter
 #      id: check
 #      uses: khan/pull-request-comment-trigger@master
 #      with:
 #        trigger: "/deploy"
 #        reaction: rocket
 #      env:
 #        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
 #    - name: parse env
 #      id: env
 #      run: |
 #        if [ "${{  steps.check.outputs.comment_body }}" == "/deploy:prod" ]
 #        then
 #          echo "env=prod" >> $GITHUB_OUTPUT
 #        else
 #          echo "env=dev" >> $GITHUB_OUTPUT
 #        fi
 #  outputs:
 #    env: ${{ steps.env.outputs.env }}
 #    active: ${{ steps.check.outputs.triggered }}

  deploy:
    runs-on: ubuntu-latest
    #needs: config
    #if: needs.config.outputs.active == 'true'
    steps:
      - name: get pull request ref
        id: get_pull_request_ref
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repo/pulls/:issue_id
          repo: ${{ github.repository }}
          issue_id: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: create deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repo/deployments
          repo: ${{ github.repository }}
          ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
          auto_merge: false
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repo/deployments/:deployment/statuses
          repo: ${{ github.repository }}
          environment: test
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: deploy the pull request
        run: |
          # deployment logic goes here
          sleep 10

      - name: set deployment status to success
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repo/deployments/:deployment/statuses
          repo: ${{ github.repository }}
          environment: test
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: success
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: set deployment status to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          #environment: ${{ needs.config.ouptputs.env }}
          environment_url: https://example.com
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: failure
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
